name: Build, Test and Deploy Container App

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - main        # Automatic trigger on push to main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          .
          !node_modules
          !.git

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.run_number }}
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Azure login with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Build and push Image
      run: |
        az acr login --name ${{ secrets.ACR_NAME }}
        docker build --platform=linux/amd64 -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.CONTAINER_APP_NAME }}:${{ env.IMAGE_TAG }} -f Dockerfile .
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.CONTAINER_APP_NAME }}:${{ env.IMAGE_TAG }}

    - name: Deploy to Container App
      uses: azure/container-apps-deploy-action@v2
      with:
        imageToDeploy: ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.CONTAINER_APP_NAME }}:${{ env.IMAGE_TAG }}
        resourceGroup: ${{ secrets.RESOURCE_GROUP_NAME }}
        containerAppEnvironment: ${{ secrets.CONTAINER_APP_ENVIRONMENT }}
        containerAppName: ${{ secrets.CONTAINER_APP_NAME }}
        targetPort: 80